version: "3.8"
services:
  backend:
    container_name: laravel
    build:
      context: ./backend
      dockerfile: ../back.Dockerfile
    restart: unless-stopped
    volumes:
      - ./backend:/var/www/html/backend
      - enlive-vendor:/var/www/html/backend/vendor
      # - ./backend/docker-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

      # depends_on:
      # - db
    environment:
      - DB_CONNECTION=${DB_CONNECTION:-pgsql}
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_DATABASE=${DB_NAME:-laravel}
      - DB_USERNAME=${DB_USER:-laravel}
      - DB_PASSWORD=${DB_PASS:-password}
    networks:
      - app
  frontend:
    container_name: next_app
    build:
      context: ./frontend
      dockerfile: ../front.Dockerfile
    restart: unless-stopped
    volumes:
      - ./frontend:/var/www/html/frontend
    command: sh -c "yarn dev"
    depends_on:
      - backend
    networks:
      - app
  db:
    container_name: db
    image: postgres:latest
    restart: unless-stopped
    volumes:
      # - ./init:/docker-entrypoint-initdb.d
      # - /etc/localtime:/etc/localtime:ro
      - ./volumes/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DATABASE: laravel
      POSTGRES_USER: laravel
      POSTGRES_PASSWORD: password
      PGPASSWORD: password
      TZ: "Asia/Tokyo"
    networks:
      - app
  nginx:
    container_name: nginx
    image: nginx:1.20-alpine
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html/backend
      - enlive-vendor:/var/www/html/backend/vendor
      - ./frontend:/var/www/html/frontend
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
    networks:
      - app
networks:
  app:
    driver: bridge
volumes:
  enlive-vendor: null
